import { GET_LIST, GET_ONE, CREATE, UPDATE, DELETE } from '@stbui/prophet-core';
import { stringify } from 'query-string';

const api = [
    {
        id: 53,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-19 15:25:45',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-19 15:26:18',
        status: 1,
        isDeleted: 0,
        serviceId: 1,
        name: 'hello',
        description: '',
        developer: '',
        method: 'GET',
        path: '/hello',
        debugMode: 0,
        config: '',
        currentState: 0,
        approvalState: 0,
        isModified: 0,
        version: 2,
        serviceName: 'service1',
    },
    {
        id: 52,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-16 16:16:26',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-16 16:25:07',
        status: 1,
        isDeleted: 0,
        serviceId: 29,
        name: '测试11111',
        description: '',
        developer: '',
        method: 'GET',
        path: '/test',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 1,
        isModified: 0,
        version: 8,
        serviceName: 'API10000',
    },
    {
        id: 51,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-16 12:00:48',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-16 16:14:39',
        status: 1,
        isDeleted: 0,
        serviceId: 29,
        name: 'getKey',
        description: '',
        developer: '',
        method: 'GET',
        path: '/key',
        debugMode: 1,
        config: '',
        currentState: 1,
        approvalState: 0,
        isModified: 1,
        version: 11,
        serviceName: 'API10000',
    },
    {
        id: 50,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-13 14:32:42',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-15 11:34:30',
        status: 1,
        isDeleted: 0,
        serviceId: 26,
        name: 'test000',
        description: 'dev',
        developer: 'dev',
        method: 'POST',
        path: '/test000/test00',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 2,
        isModified: 0,
        version: 3,
        serviceName: 'test000',
    },
    {
        id: 49,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-13 11:47:56',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-13 11:56:48',
        status: 1,
        isDeleted: 0,
        serviceId: 25,
        name: 'judgeEvaluate',
        description: 'judge',
        developer: 'lin',
        method: 'POST',
        path: '/evaluate/judge/test',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 0,
        isModified: 0,
        version: 2,
        serviceName: 'evaluate',
    },
    {
        id: 47,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-12 18:08:55',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-12 18:08:55',
        status: 1,
        isDeleted: 0,
        serviceId: 1,
        name: 'fsdf',
        description: '',
        developer: '',
        method: 'GET',
        path: '/fsdfs',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 2,
        isModified: 0,
        version: 1,
        serviceName: 'service1',
    },
    {
        id: 46,
        createUser: '1123598821738675201',
        createDept: '1353878215063064577',
        createTime: '2021-04-09 16:59:04',
        updateUser: '1123598821738675201',
        updateTime: '2021-04-09 17:00:29',
        status: 1,
        isDeleted: 0,
        serviceId: 1,
        name: 'test multi level path',
        description: '',
        developer: '',
        method: 'GET',
        path: '/test/path',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 0,
        isModified: 0,
        version: 2,
        serviceName: 'service1',
    },
    {
        id: 44,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-04-06 17:47:15',
        updateUser: '1371717439132860417',
        updateTime: '2021-04-08 10:14:21',
        status: 1,
        isDeleted: 0,
        serviceId: 23,
        name: '9999接口名',
        description: '',
        developer: '9999开发人员',
        method: 'GET',
        path: '/9999/test',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 0,
        isModified: 0,
        version: 4,
        serviceName: '9999',
    },
    {
        id: 43,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-03-30 13:50:40',
        updateUser: '1371717439132860417',
        updateTime: '2021-03-30 13:54:39',
        status: 1,
        isDeleted: 0,
        serviceId: 15,
        name: 'healthcheck',
        description: '',
        developer: '',
        method: 'GET',
        path: '/health/check',
        debugMode: 1,
        config: '',
        currentState: 0,
        approvalState: 1,
        isModified: 0,
        version: 3,
        serviceName: 'avatar',
    },
    {
        id: 42,
        createUser: '1371717439132860417',
        createDept: '1260823335286165505',
        createTime: '2021-03-29 17:00:36',
        updateUser: '1371717439132860417',
        updateTime: '2021-03-30 09:14:22',
        status: 1,
        isDeleted: 0,
        serviceId: 1,
        name: '312321312',
        description: '',
        developer: '',
        method: 'GET',
        path: '/dw231/3213rdws',
        debugMode: 0,
        config: '',
        currentState: 0,
        approvalState: 0,
        isModified: 0,
        version: 2,
        serviceName: 'service1',
    },
];

export default (apiUrl, httpClient, type, resource, params) => {
    let url = '';

    switch (type) {
        case GET_LIST:
            const { pagination, sort, filter, ...other } = params;
            const { page, perPage } = pagination;
            const query = {
                pageNum: page,
                pageSize: perPage,
                ...filter,
            };

            url = `${resource}?${stringify(query)}`;

            // return httpClient(url).then(({ json }) => ({
            //     data: json.result,
            //     total: json.result.length,
            // }));

            return Promise.resolve({ data: api, total: 1 });

        case GET_ONE:
            url = `${resource}/${params.id}`;

            return httpClient(url).then(({ json }) => ({ data: json.result }));

        case CREATE:
            url = `${resource}`;

            return httpClient(url, {
                method: 'POST',

                body: params.data,
            }).then(({ json }) => ({ data: json }));

        case UPDATE:
            url = `${resource}/${params.id}`;

            return httpClient(url, {
                method: 'PUT',
                body: { ...params.data, id: params.id },
            }).then(({ json }) => ({ data: json }));

        default:
            throw new Error(`不支持action类型 ${type}`);
    }
};
